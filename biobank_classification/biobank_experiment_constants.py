FULL_PYPPG_FEATURES = [
    "Tpi",
    "Tsys",
    "Tdia",
    "Tsp",
    "Tdp",
    "deltaT",
    "Tsw10",
    "Tsw25",
    "Tsw33",
    "Tsw50",
    "Tsw66",
    "Tsw75",
    "Tsw90",
    "Tdw10",
    "Tdw25",
    "Tdw33",
    "Tdw50",
    "Tdw66",
    "Tdw75",
    "Tdw90",
    "Tpw10",
    "Tpw25",
    "Tpw33",
    "Tpw50",
    "Tpw66",
    "Tpw75",
    "Tpw90",
    "Asp",
    "Adn",
    "Adp",
    "Aoff",
    "AUCpi",
    "AUCsys",
    "AUCdia",
    "IPR",
    "Tsys/Tdia",
    "Tpw25/Tpi",
    "Tpw50/Tpi",
    "Tpw75/Tpi",
    "Tpw25/Tsp",
    "Tpw50/Tsp",
    "Tpw75/Tsp",
    "Tdw10/Tsw10",
    "Tdw25/Tsw25",
    "Tdw33/Tsw33",
    "Tdw50/Tsw50",
    "Tdw66/Tsw66",
    "Tdw75/Tsw75",
    "Tdw90/Tsw90",
    "Tsp/Tpi",
    "Asp/Aoff",
    "Adp/Asp",
    "IPA",
    "Tsp/Asp",
    "Asp/deltaT",
    "Asp/(Tpi-Tsp)",
    "Tu",
    "Tv",
    "Tw",
    "Ta",
    "Tb",
    "Tc",
    "Td",
    "Te",
    "Tf",
    "Tb-c",
    "Tb-d",
    "Tp1",
    "Tp2",
    "Tp1-dp",
    "Tp2-dp",
    "Tu/Tpi",
    "Tv/Tpi",
    "Tw/Tpi",
    "Ta/Tpi",
    "Tb/Tpi",
    "Tc/Tpi",
    "Td/Tpi",
    "Te/Tpi",
    "Tf/Tpi",
    "(Tu-Ta)/Tpi",
    "(Tv-Tb)/Tpi",
    "Au/Asp",
    "Av/Au",
    "Aw/Au",
    "Ab/Aa",
    "Ac/Aa",
    "Ad/Aa",
    "Ae/Aa",
    "Af/Aa",
    "Ap2/Ap1",
    "(Ac-Ab)/Aa",
    "(Ad-Ab)/Aa",
    "AGI",
    "AGImod",
    "AGIinf",
    "AI",
    "RIp1",
    "RIp2",
    "SC",
    "IPAD",
]


def get_pyppg_features(outcome):
    with open(f"final_pyppg_feature_columns_{outcome}.txt", "r") as f:
        final_features = f.read().splitlines()
    return final_features
